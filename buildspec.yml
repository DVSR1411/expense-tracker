version: 0.2
phases:
  install:
    commands:
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.30.7/2024-12-12/bin/darwin/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - yum -y update && yum -y install jq python3-pip && pip3 install --upgrade pip awscli  
  pre_build:
    commands:
        - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $DOCKER_URL
  build:
    commands:
      - docker build -t $DOCKER_REPO:$DOCKER_TAG .
      - docker tag $DOCKER_REPO:$DOCKER_TAG $DOCKER_URL/$DOCKER_REPO:$DOCKER_TAG
  post_build:
    commands:
      - docker push $DOCKER_URL/$DOCKER_REPO:$DOCKER_TAG
      - sed -i "s#dvsr1411/flaskapp:v1#$DOCKER_URL/$DOCKER_REPO:$DOCKER_TAG#g" manifests/deployment.yml
      - CREDENTIALS=$(aws sts assume-role --role-arn $KUBECTL_ROLE --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name $EKS_CLUSTER --region ap-south-1
      - kubectl apply -f manifests/deployment.yml
      - printf '{"ImageURI":"%s"}' $DOCKER_URL/$DOCKER_REPO:$DOCKER_TAG > imageDetail.json
artifacts:
  files:
    - imageDetail.json
    - manifests/*
  discard-paths: yes
cache:
  paths:
    - '/root/.cache/pip/**/*'
